# Deployment for myapp
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp-deployment
  namespace: myapp # You can change this to your specific namespace
  #annotations:
  #argocd-image-updater.argoproj.io/image-list: docker.io/jamaldevsecops/myapp:v1.x # Instructs Argo CD Image Updater to track this image
  #argocd-image-updater.argoproj.io/write-back-method: git:secret:argocd/git-creds # Write changes back to Git (if Git repo was connected with write access)
  #argocd-image-updater.argoproj.io/update-strategy: digest # Use digest strategy to track changes even if tag remains ":latest"  
  #argocd-image-updater.argoproj.io/myapp.update-strategy: semver
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      labels:
        app: myapp
    spec:
      containers:
      - name: myapp
        image: jamaldevsecops/myapp
        ports:
        - containerPort: 80
        #resources:
          #requests:
            #memory: "16Mi"
            #cpu: "50m"
          #limits:
            #memory: "1Gi"
            #cpu: "1"
      #imagePullSecrets:
      #- name: privatedockerhubcred
---
# HPA for myapp
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: myapp-hpa
  namespace: myapp
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: myapp-deployment
  minReplicas: 2
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70  
---
# Service for myapp
apiVersion: v1
kind: Service
metadata:
  name: myapp-service
  namespace: myapp
  labels:
    app: myapp
spec:
  type: ClusterIP  
  selector:
    app: myapp
  ports:
    - protocol: TCP
      port: 80            
      targetPort: 80